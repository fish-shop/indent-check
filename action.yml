name: 'fish-shop/indent-check'
description: 'A GitHub action for checking indentation in fish shell files'
branding:
  icon: 'check'
  color: 'green'
inputs:
  title:
    description: 'Title to display in job summary'
    required: false
    default: 'Indent check results'
  patterns:
    description: 'File patterns to match against when running indentation checks'
    required: false
    default: '**.fish'
outputs:
  total:
    description: "Total number of files indentation checked"
    value: ${{ steps.indent-check.outputs.total }}
  passed:
    description: "Number of files passed indentation check"
    value: ${{ steps.indent-check.outputs.passed }}
  failed:
    description: "Number of files failed indentation check"
    value: ${{ steps.indent-check.outputs.failed }}
runs:
  using: "composite"
  steps:
    - name: Check indentation in fish shell files
      id: indent-check
      env:
        TITLE: ${{ inputs.title }}
        PATTERNS: ${{ inputs.patterns }}
      run: |
        set -gx TERM xterm-256color

        set title "$TITLE"
        set annotations "$ANNOTATIONS"

        set passed 0
        set failed 0

        for pattern in (string split --no-empty -- " " $PATTERNS)
            set -l escaped (string escape --style=script --no-quoted -- $pattern)
            set -l escaped (string replace -r -a -- '\\\([?*{}])' '$1' $escaped)

            eval set -l files $escaped

            for file in $files
                echo -n "  "
                set -l output (fish_indent -c $file 2>&1 >/dev/null)
                if test $status -ne 0
                    set_color red; and echo -n "✖"; and set_color normal
                    echo " $file"
                    set failed (math $failed + 1)
                else
                    set_color green; and echo -n "✔"; and set_color normal
                    echo " $file"
                    set passed (math $passed + 1)
                end
            end
        end

        set total (math $passed + $failed)

        echo
        set_color green; and echo -n "passed: $passed"; and set_color normal
        echo -n "  "
        set_color red; and echo -n "failed: $failed"; and set_color normal
        echo "  of $total files"
        echo

        if test $failed -gt 0
            set_color red; and echo "$failed of $total failed."
        else
            set_color green; and echo "All of $total files passed!"
        end

        if test $failed -eq 0
            set result ":white_check_mark: Pass"
        else
            set result ":x: Fail"
        end

        echo "### $title" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Result :microscope: | Passed :white_check_mark: | Failed :x: |" >> $GITHUB_STEP_SUMMARY
        echo "|---------------------|---------------------------|------------|" >> $GITHUB_STEP_SUMMARY
        echo "| $result             | $passed                   | $failed    |" >> $GITHUB_STEP_SUMMARY

        echo "total=$total" >> "$GITHUB_OUTPUT"
        echo "passed=$passed" >> "$GITHUB_OUTPUT"
        echo "failed=$failed" >> "$GITHUB_OUTPUT"

        if test $failed -ne 0
            exit 1
        end
      shell: fish {0}
